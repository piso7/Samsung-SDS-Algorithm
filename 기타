## MST 알고리즘

MST 를 구하는 알고리즘 (최소신장트리)

트리의 특징, 정점이 N 개면 간선은 항상 N-1개이다.

MST 를 구하는 알고리즘은 그리디 알고리즘이다.

1. 크루스칼 알고리즘

간선 중심으로 알고리즘이 전개됨

Union-Find 자료구조를 사용한다.

(0) 간선리스트로 그래프를 입력받는다.

(1) 간선들을 모두 정렬한다. (가중치 오름차순으로..)

(2) 가중치가 작은 간선들부터 그래프를 구성한다.

이때, 간선 양쪽 끝을 find 해보고 같은 집합이 아닐때만 Union 한다.
(3) 총 N-1 개의 간선을 연결하면 종료한다.

소트 vs 우선순위큐의 시간복잡도 차이

-> 미세한 차이는 있겠지만,

Big-O Notation 관점에서는 동일함 O(ElogE) (E 는 간선수)

2. 프림 알고리즘

정점 중심으로 알고리즘이 전개됨

우선순위큐를 사용한다.

인접리스트를 사용하는게 유리하다.

탐색이 완료된 정점들을 배열에 기록해서 사이클을 피한다.

## 위상정렬

진입차수가 0인 정점들을 저장할 큐를 만든다.

최초 진입차수가 0인 정점들을 큐에 넣는다.

큐가 빌때까지 반복한다.

. 큐에서 꺼내서,

. 인접한 정점들의 진입차수를 -1한다.

. 이때, 대상 정점의 진입차수가 0이 되면 해당 정점을 큐에 넣는다.

위상정렬 종료

메모리 크기 계산

문제에서 제공되는 메모리 (128mb)

vs

32000 32000 integer 하나가 차지하는 메모리

(32000은 문제에서 제공되는 사람의 최대값)
